@page "/auctions/{id:int}"
@using BlazorApp.Data
@using BlazorApp.Entities
@using Microsoft.JSInterop
@using System.Security.Claims

@inject AuthenticationStateProvider authenticationStateProvider
@inject NavigationManager navigationManager
@inject MessagesService messageService
@inject DisplayAuctionService service
@inject AuctionService auctionService
@inject IJSRuntime JsRuntime

<div id="test" hidden="@(!showImages)" style="position:absolute;width:100%;height:100%;top:0; left:0; background:rgb(255 255 255); z-index:1;text-align:center">
    <div id="carouselExampleIndicators"
         class="carousel slide" data-ride="carousel" style="background:rgb(255 255 255); display:inline-block ;height:800px;width:800px; margin-top:20px">     
        <ol class="carousel-indicators">
            @for (int i = 0; i < service.auction.Images.Count; i++)
            {
                if (i == 0)
                {
                    <li data-target="#carouselExampleIndicators" data-slide-to="@i" class="active"></li>
                }
                else
                {
                    <li data-target="#carouselExampleIndicators" data-slide-to="@i"></li>
                }

            }

        </ol>
        
        <div class="carousel-inner">
            @foreach (var item in service.auction.Images)
            {
                @if (item == service.auction.Images.Where(e => e.Main == true).FirstOrDefault())
                {
                    <div class="carousel-item  active">
                        <img class="d-block" src=@item.ImageLocation style="height:800px;width:800px">
                    </div>
                }
                else
                {

                    <div class="carousel-item">
                        <img class="d-block" src=@item.ImageLocation style="height:800px;width:800px">
                    </div>
                }
            }
        </div>
        <a id="carouselExampleIndicators-prev"
           class="carousel-control-prev" role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a id="carouselExampleIndicators-next"
           class="carousel-control-next" role="button" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
    </div>
    <p></p>
    <button @onclick="e=>this.showImages =!this.showImages" style="height:50px;width:50px;background:rgba(0,0,0,0);border:none;outline:none">
        <span class="oi oi-x" style="font-size:40px; color:rgb(128 128 128)"></span>
    </button>
</div>


<div class="media col-md-12" hidden="@(showImages)" style="height:440px;border-radius: 10px;">
    <button class="btn btn-dark" @onclick="e=>this.showImages =!this.showImages" style="height:400px;width:400px;margin:20px; background:rgba(0,0,0,0); border:none; outline:none">
        <div id="carouselExampleIndicators"
             class="carousel slide" data-ride="carousel" style="background:rgb(255 216 0);">
           @if (showConfirmAuction == false && showConfirmBuyNow == false && userInfo == true && message == true)
           {
            <ol class="carousel-indicators">
                @for (int i = 0; i < service.auction.Images.Count; i++)
                {
                    if (i == 0)
                    {
                        <li data-target="#carouselExampleIndicators" data-slide-to="@i" class="active"></li>
                    }
                    else
                    {
                        <li data-target="#carouselExampleIndicators" data-slide-to="@i"></li>
                    }

                }

            </ol>
           }
            <div class="carousel-inner">
                @foreach (var item in service.auction.Images)
                {
                    @if (item == service.auction.Images.Where(e => e.Main = true).FirstOrDefault())
                    {
                        <div class="carousel-item  active">
                            <img class="d-block w-100" src=@item.ImageLocation style="height:400px;width:400px">
                        </div>
                    }
                    else
                    {

                        <div class="carousel-item">
                            <img class="d-block w-100" src=@item.ImageLocation style="height:400px;width:400px">
                        </div>
                    }
                }
            </div>
            <a id="carouselExampleIndicators-prev"
               class="carousel-control-prev" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a id="carouselExampleIndicators-next"
               class="carousel-control-next" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
    </button>



    <div class="media-body col-md-12" style="margin: 20px; position:relative; height:400px;">

        <h2>@service.auction.Title</h2><p></p>

        <div class="account">
            <button style="background:rgba(0,0,0,0); outline:none; border:none" @onclick="e=> userInfo = !userInfo">
                <span class="oi oi-person"></span>
                @service.auction.User.FirstName @service.auction.User.LastName
            </button>
            <p></p>
            Kontakt: <br />
            e-mail: @service.auction.User.Email<br />
            telefon: 25102341234
        </div>

        <div class="Description" style="position:absolute; bottom:0">
            <p>
                Czas trwania aukcji: @if ((service.auction.Date.AddDays(service.auction.HowManyDays) - DateTime.Now).Days > 0)
                {
                    @((service.auction.Date.AddDays(service.auction.HowManyDays) - DateTime.Now).Days) <span>dzień/dni</span>

                }
                else if ((service.auction.Date.AddDays(service.auction.HowManyDays) - DateTime.Now).Hours > 0)
                {
                    @((service.auction.Date.AddDays(service.auction.HowManyDays) - DateTime.Now).Hours) <span>godzina/godziny</span>
                }
                else
                {
                    @((service.auction.Date.AddDays(service.auction.HowManyDays) - DateTime.Now).Minutes) <span>minuta/minuty</span>
                }
            </p>

            Lokalizacja: @service.auction.Location
        </div>



        <AuthorizeView>
            <Authorized>
                @if (service.auction.FollowAuction.FirstOrDefault(p => p.Follow == true) is not null)
                {
                    <button class="customButton" @onclick="e=> Follow(id,userId,false)">
                        <div class="oi oi-heart" style="color: rgb(0,0,0); font-size: 50px;width: 50px;height: 50px;">
                        </div>
                    </button>

                }
                else
                {
                    <button class="customButton" @onclick="e=> Follow(id,userId,true)">
                        <div class="oi oi-heart" style="text-shadow: 2px 2px #888888, -2px -2px #888888;color: rgb(200,200,200);
                                         font-size: 50px;width: 50px;height: 50px;">
                        </div>
                    </button>
                }

            </Authorized>
            <NotAuthorized>
                <button class="customButton" @onclick="e=>navigationManager.NavigateTo(navi)">
                    <div class="oi oi-heart" style="text-shadow: 2px 2px #888888, -2px -2px #888888;color: rgb(200,200,200);
                                         font-size: 50px;width: 50px;height: 50px;">
                    </div>
                </button>
            </NotAuthorized>
        </AuthorizeView>
        @if (auctionService.transactions == null)
        {
            <div class="CurrentPrice" style="position:absolute; right:3%; top:100px">
                <h4>@service.auction.StartPrice zł</h4>
                <input type="number" min=@(service.auction.StartPrice + 1) max=@service.auction.BuyNowPrice @bind="price" style="background: rgb(230 230 230);"> zł <p></p>
                <button class="btn btn-primary col-12" @onclick="@(e=>showConfirmAuction=!showConfirmAuction)">Licytuj</button><p></p>
                <h4>@service.auction.BuyNowPrice zł</h4>
                <button class="btn btn-dark col-md-12" @onclick="@(e=>showConfirmBuyNow=!showConfirmBuyNow)">Kup Teraz</button>
            </div>
        }
        else
        {
            <div class="CurrentPrice" style="position:absolute; right:3%; top:100px">
                <h4>@auctionService.transactions.Price zł</h4>
                <input type="number" min=@(auctionService.transactions.Price + 1) max=@service.auction.BuyNowPrice @bind="price" style="background: rgb(230 230 230);"> zł <p></p>
                <button class="btn btn-primary col-12" @onclick="@(e=>showConfirmAuction=!showConfirmAuction)">Licytuj</button><p></p>
                <h4>@service.auction.BuyNowPrice zł</h4>
                <button class="btn btn-dark col-12" @onclick="@(e=>showConfirmBuyNow=!showConfirmBuyNow)">Kup Teraz</button>
            </div>
        }

    </div>
</div>

<div hidden="@(!showConfirmAuction)" style="position: absolute; height: 100%; width: 100%; top: 0; left: 0; background:rgba(128 ,128 ,128, 0.8); z-index: 1;
                                           display:flex; align-items:center; justify-content: center;vertical-align: middle;">
    <div style="height:200px; width:400px; background:rgb(255 255 255); text-align: center; border-radius: 10px;margin:10px;vertical-align: middle;">
        <div class="row h-100 justify-content-center align-items-center">
            <span style="padding:20px; font-weight:bold">Czy na pewno chcesz wziąć udział w licytacji tego przedmiotu, twoja oferta to @price zł</span>
            <button class="btn btn-dark col-4" style="margin-right:10px" @onclick="@(e => Transaction(id,userId,price, true))">Licytuj</button>
            <button class="btn btn-dark col-4" @onclick="@(e=>showConfirmAuction=!showConfirmAuction)">Anuluj</button>
        </div>
    </div>
</div>
<div hidden="@(!showConfirmBuyNow)" style="position: absolute; height: 100%; width: 100%; top: 0; left: 0; background:rgba(128 ,128 ,128, 0.8); z-index: 1;
                                           display:flex; align-items:center; justify-content: center;vertical-align: middle;">
    <div style="height:200px; width:400px; background:rgb(255 255 255); text-align: center; border-radius: 10px;margin:10px;vertical-align: middle;">
        <div class="row h-100 justify-content-center align-items-center">
            <span style="padding:20px; font-weight:bold">Potwierdż czy na pewno chcesz zakupić ten przedmiot za @service.auction.BuyNowPrice zł</span>
            <button class="btn btn-dark col-4" style="margin-right:10px" @onclick="@(e => Transaction(id,userId,service.auction.BuyNowPrice, false))">Licytuj</button>
            <button class="btn btn-dark col-4" @onclick="@(e=>showConfirmBuyNow=!showConfirmBuyNow)">Anuluj</button>
        </div>
    </div>
</div>


<div class="desc col-md-12" style="margin-top:10px; min-height:50px; padding:10px;border-radius: 10px;">
    @service.auction.Description
</div>

<div hidden="@notificationFollow" class="btn-dark row justify-content-center align-items-center" style="font-size:14px;position:fixed;width:150px;top:60px;right:5px;height:50px;z-index: 1;
                                                margin-left:auto; margin-right:auto;text-align:center;border-radius:4px;">
    Aukcje dodano do ulubionych
</div>

<div hidden="@notificationUnFollow" class="btn-dark row justify-content-center align-items-center" style="font-size:14px;position:fixed;width:150px;top:60px;right:5px;height:50px;z-index: 1;
                                                margin-left:auto; margin-right:auto;text-align:center;border-radius:4px;">
    Aukcje usunięto z ulubionych
</div>


<div hidden="@userInfo" style="position: absolute; height: 100%; width: 100%; top:0 ; left:0; background:rgba(128 ,128 ,128, 0.8); z-index: 1" >
    <div style="height:100%; width:100%-350px" @onclick="e=>userInfo = true"></div>

    <div style=" position: absolute;right:0;top:0; height:100%; width:350px;background:red;">

        <div class="col-12" style=" position: absolute;height:100%; background:white;">

            <div class="row" style=" margin-top:10px">
                <button @onclick="e=>userInfo = true" style="background:rgba(0,0,0,0);border:none;outline:none">
                    <span class="oi oi-x" style="font-size:40px; color:rgb(128 128 128)"></span>
                </button>
            </div>

            <div class="row " style="margin-top:10px;">
                <button style="border:none; outline:none; background:rgba(0,0,0,0);display:flex; align-items:center;justify-content:center"
                        @onclick="@(() => { message = false; userInfo = true; })">
                    <span class="oi oi-envelope-closed" style="font-size:40px; color:rgb(128 128 128); margin-right:10px"></span>
                    Pytanie do sprzedającego
                </button>
            </div>

            <div class="row " style="margin-top:10px; align-items:center; ">
                <span class="oi oi-star" style="font-size:40px; color:rgb(128 128 128); margin-right:10px;margin-left:5px"></span>
                <span style="font-size:12px">tutaj beda oceny chyba</span>
            </div>

            <div class="row " style="margin-top:10px; align-items:center; ">
                <span class="oi oi-person" style="font-size:40px; color:rgb(128 128 128); margin-right:10px;margin-left:5px"></span>
                <span style="font-size:12px">Data dołączenia: @service.auction.User.Date.ToString("d")</span>
            </div>

            <div class="row" style="margin-top:10px;align-items:center;">
                <span class="oi oi-pin" style="font-size:40px; color:rgb(128 128 128); margin-right:10px;margin-left:5px"></span>
                <span style="font-size:12px">Ostatnie logowanie: @service.auction.User.CurrentLog.Date.ToString("g")</span>
            </div>

        </div>
        </div>
</div>

<div hidden="@message" style="position: absolute; height: 100%; width: 100%; top: 0; left: 0; background:rgba(128 ,128 ,128, 0.8); z-index: 1;
                                           display:flex; align-items:center; justify-content: center;vertical-align: middle;">
    <div style="height:300px; width:600px; background:rgb(255 255 255); text-align: center; border-radius: 10px;margin:10px;">
        <div class="form-group col-12" style="margin-top:20px">
            <label for="Description" style="font-weight:bold">Zadaj pytanie sprzedającemu</label>
            <textarea type="text" class="form-control" rows="4" id="Description" @bind="@messageService.newMessage.message" />
        </div>
        <button class="btn btn-dark col-4" style="margin-right:10px" @onclick="@(e => AskAboutProduct(userId, service.auction.User.Id, id))">Wyślij wiadomość</button>
        <button class="btn btn-dark col-4" @onclick="@(e=>message=!message)">Anuluj</button>
    </div>
</div>

@code {
    [CascadingParameter]
    public Task<AuthenticationState> authenticationState { get; set; }
    ClaimsPrincipal user;
    int userId;
    string navi = "/login";
    bool showImages = false;
    bool showConfirmAuction = false;
    bool showConfirmBuyNow = false;
    int price = 0;
    bool firstRender = true;
    bool notificationFollow = true;
    bool notificationUnFollow = true;
    bool userInfo = true;
    bool message = true;
    [Parameter]
    public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        user = (await authenticationState).User;
        if (user.Identity.IsAuthenticated)
        {
            var claims = user.Claims.ToList();
            var Id = claims[0].Value;
            userId = int.Parse(Id);
            service.GetData(id, userId);
        }
        else
        {
            service.GetData(id);
        }
        auctionService.GetTransactions(id);

        if (auctionService.transactions != null)
        {
            price = auctionService.transactions.Price + 1;
        }
        else
        {
            price = service.auction.StartPrice + 1;
        }
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JsRuntime.InvokeAsync<object>("initializeCarousel");
            firstRender = false;
        }

    }

    void Transaction(int auctionId, int userId, int price, bool type)
    {
        auctionService.AddTransaction(auctionId, userId, price, type);
        if (type == true)
        {
            service.FollowAuction(auctionId, userId, true);
        }
        showConfirmAuction = false;
        showConfirmBuyNow = false;
    }

    private async Task Notification(bool follow)
    {
        if (follow == true)
        {
            notificationFollow = !notificationFollow;
        }
        else
        {
            notificationUnFollow = !notificationUnFollow;
        }
        await Task.Delay(1000);
        notificationFollow = true;
        notificationUnFollow = true;
    }

    async Task Follow(int auctionId, int userId, bool follow) //follow okresla czy followujemy czy unfollowujemy zmieniamy wtedy tresc komunikatu
    {
        service.FollowAuction(auctionId, userId);
        await Notification(follow);

    }

    private void AskAboutProduct(int senderId, int recipientId, int auctionId)
    {
        messageService.AskAboutProduct(senderId,recipientId,auctionId);
        message = true;
    }
}
